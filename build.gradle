plugins {
    id 'fabric-loom' version '1.5-SNAPSHOT'
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

loom {
    accessWidenerPath = file("src/main/resources/bewitchment.accesswidener")
}

repositories {
    maven {
        name "cardinal components, playerabilitylib, trinkets"
        url "https://maven.ladysnake.org/releases"
    }
    maven {
        name "impersonate"
        url "https://oss.sonatype.org/content/repositories/snapshots"
    }
    maven {
        name "reach entity attributes"
        url "https://maven.jamieswhiteshirt.com/libs-release"
    }
    maven {
        name "terraform api, trinkets, emi"
        url "https://maven.terraformersmc.com"
    }
    maven {
        name "patchouli"
        url "https://maven.blamejared.com"
    }
    maven {
        name "appleskin"
        url "https://maven.ryanliptak.com"
    }
    maven {
        name "appleskin"
        url "https://maven.shedaniel.me"
    }
    maven {
        name "modrinth"
        url "https://api.modrinth.com/maven"
    }
    maven {
        name "jitpack"
        url "https://jitpack.io"
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings "net.fabricmc:yarn:${yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${loader_version}"
    implementation "com.demonwav.mcdev:annotations:2.1.0"

    modApi "dev.onyxstudios.cardinal-components-api:cardinal-components-base:${cardinal_components_version}"
    modApi "dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${cardinal_components_version}"
    //^ don't include because trinkets already does
    include modApi("me.lucko:fabric-permissions-api:${fabric_permissions_api_version}")
    include modApi("maven.modrinth:impersonate:${impersonate_version}")
    include modApi("maven.modrinth:midnightlib:${midnightlib_version}")
    include modApi("io.github.ladysnake:PlayerAbilityLib:${playerabilitylib_version}")
    include modApi("com.jamieswhiteshirt:reach-entity-attributes:${reach_entity_attributes_version}")
    include modApi("com.github.emilyploszaj:step-height-entity-attribute:${step_height_entity_attribute_version}")
    include modApi("com.terraformersmc.terraform-api:terraform-wood-api-v1:${terraform_api_version}")

    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"
    modImplementation "vazkii.patchouli:Patchouli:${patchouli_version}"
    modImplementation "com.github.Virtuoel:Pehkui:${pehkui_version}"
    modImplementation "dev.emi:trinkets:${trinkets_version}"

    modImplementation "dev.emi:emi-fabric:${emi_version}"

    modCompileOnly("com.github.apace100:apoli:${apoli_version}") {
        exclude(group: "*")
    }
    modCompileOnly "squeek.appleskin:appleskin-fabric:${appleskin_version}:api"

    modRuntimeOnly "maven.modrinth:modmenu:${mod_menu_version}"
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

java {
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.base.archivesName.get()}" }
    }
}
